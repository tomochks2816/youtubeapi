const express = require("express");
const { Innertube } = require("youtubei.js");
const cors = require("cors");

const app = express();
app.use(cors());

let yt;

// YouTube API ÂàùÊúüÂåñ
(async () => {
    try {
        yt = new Innertube();  // „Éê„Éº„Ç∏„Éß„É≥ 1.4.5 „Å´ÂØæÂøú
        console.log("‚úÖ YouTube API initialized successfully.");
    } catch (error) {
        console.error("‚ùå Error initializing YouTube API:", error);
    }
})();

// ÂãïÁîªÊÉÖÂ†±„ÇíÂèñÂæó„Åô„ÇãAPI
app.get("/video", async (req, res) => {
    const videoId = req.query.id;

    if (!videoId) {
        console.error("‚ùå Error: Video ID is missing.");
        return res.status(400).json({ error: "ÂãïÁîªID„ÅåÂøÖË¶Å„Åß„Åô" });
    }

    if (!yt) {
        console.error("üö® YouTube API has not been initialized yet.");
        return res.status(500).json({ error: "YouTube API„ÅÆÂàùÊúüÂåñ„ÅåÂÆå‰∫Ü„Åó„Å¶„ÅÑ„Åæ„Åõ„Çì„ÄÇ" });
    }

    try {
        console.log(`üîç Fetching details for video ID: ${videoId}`);
        const video = await yt.getBasicInfo(videoId); // getVideo() ‚Üí getBasicInfo() „Å´Â§âÊõ¥
        console.log(`‚úÖ Successfully fetched video details for ID: ${videoId}`);
        res.json(video);
    } catch (error) {
        console.error("‚ùå Error fetching video details:", error);
        res.status(500).json({ error: "ÂãïÁîªÊÉÖÂ†±„ÅÆÂèñÂæó„Å´Â§±Êïó„Åó„Åæ„Åó„Åü„ÄÇ" });
    }
});

// „Éù„Éº„ÉàË®≠ÂÆöÔºà‰ΩøÁî®‰∏≠„Å™„Çâ +1 „Åô„ÇãÔºâ
const startServer = (port) => {
    const server = app.listen(port, () => {
        console.log(`üöÄ Server is running on port ${port}`);
    });

    server.on("error", (err) => {
        if (err.code === "EADDRINUSE") {
            console.warn(`‚ö†Ô∏è Port ${port} is in use, trying port ${port + 1}...`);
            startServer(port + 1);
        } else {
            console.error("‚ùå Server error:", err);
        }
    });
};

startServer(process.env.PORT || 3000);
